#define _SYS_CDEFS_H 1
#define __strtoll_internal_defined 1
#define __INT_WCHAR_T_H 
#define _ALLOCA_H 1
#define _BSD_SOURCE 1
#define __STRING(x) #x
#define __NFDBITS (8 * sizeof (__fd_mask))
#define __unbounded 
#define _T_WCHAR_ 
#define __INO_T_TYPE __ULONGWORD_TYPE
#define __flexarr []
#define __S64_TYPE __quad_t
#define __stub_fchflags 
#define __SQUAD_TYPE long long int
#define __ssize_t_defined 
#define __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
#define _BSD_SIZE_T_DEFINED_ 
#define _SYS_SIZE_T_H 
#define __TIME_T_TYPE __SLONGWORD_TYPE
#define __FSBLKCNT64_T_TYPE __UQUAD_TYPE
#define makedev(maj,min) gnu_dev_makedev (maj, min)
#define __SUSECONDS_T_TYPE __SLONGWORD_TYPE
#define __SIZE_T__ 
#define __stub_gtty 
#define __NLINK_T_TYPE __UWORD_TYPE
#define __need_clockid_t 
#define __HAVE_BUILTIN_SETJMP__ 1
#define __nlink_t_defined 
#define __sigset_t_defined 
#define __stub_sstk 
#define __GLIBC_PREREQ(maj,min) ((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min))
#define __attribute_format_arg__(x) __attribute__ ((__format_arg__ (x)))
#define __STDC_IEC_559_COMPLEX__ 1
#define __VARR_H__ 
#define VARR_init_stack(arr,elmsize,numofelem) do { (arr)->ctx = 0; (arr)->elmcount = 0; (arr)->elmsize = (elmsize); (arr)->elmmaxcount = (elmsize) * (numofelem); (arr)->buffer = (char *) alloca( (str)->elmmaxcount ); (arr)->sizepolicy.type = VRESIZE_fixed; } while(0);
#define __PDP_ENDIAN 3412
#define __BLKCNT_T_TYPE __SLONGWORD_TYPE
#define BYTE_ORDER __BYTE_ORDER
#define __USE_BSD 1
#define _BITS_TYPESIZES_H 1
#define __ASMNAME2(prefix,cname) __STRING (prefix) cname
#define __unix__ 1
#define MB_CUR_MAX (__ctype_get_mb_cur_max ())
#define V_UNUSED(x) (void) (x);
#define __SWBLK_T_TYPE __SLONGWORD_TYPE
#define RAND_MAX 2147483647
#define unix 1
#define __stub_setlogin 
#define _VERROR_H_ 
#define _BSD_SIZE_T_ 
#define __i386__ 1
#define __SIZE_TYPE__ unsigned int
#define __ULONGWORD_TYPE unsigned long int
#define _SIZE_T_DECLARED 
#define __strtoul_internal_defined 1
#define V_UINT8 unsigned char
#define __COMPAR_FN_T 
#define __GID_T_TYPE __U32_TYPE
#define __ELF__ 1
#define _SIGSET_H_types 1
#define __id_t_defined 
#define V_CONTEXT_ERROR(ctx,err,ptr) do { if (ctx) { (ctx)->error_callback( (ctx), (err), (ptr) ); } } while(0);
#define __stub___kernel_cosl 
#define __strtoull_internal_defined 1
#define __ID_T_TYPE __U32_TYPE
#define __u_char_defined 
#define __stub_lutimes 
#define __pid_t_defined 
#define __GNUC_PATCHLEVEL__ 3
#define __GNUC_RH_RELEASE__ 59
#define minor(dev) gnu_dev_minor (dev)
#define _POSIX_C_SOURCE 199506L
#define __size_t 
#define __long_double_t long double
#define _WCHAR_T_DEFINED 
#define __uid_t_defined 
#define NFDBITS __NFDBITS
#define V_MEMBEROF_STC(ptr,sname,member) ( (sname *) ( ((V_UINT8 *) ptr) - V_OFFSETOF(sname,member) ) )
#define __daddr_t_defined 
#define __LITTLE_ENDIAN 1234
#define __restrict_arr __restrict
#define __USE_MISC 1
#define __UWORD_TYPE unsigned int
#define _SIZE_T_ 
#define V_L2_CACHE_LINE_SIZE (32)
#define __linux 1
#define _WCHAR_T_H 
#define _BITS_TYPES_H 1
#define V_UINT64 unsigned __int64
#define __unix 1
#define __stub_revoke 
#define __timer_t_defined 1
#define __UID_T_TYPE __U32_TYPE
#define major(dev) gnu_dev_major (dev)
#define __SIZE_T 
#define FD_SETSIZE __FD_SETSIZE
#define V_MALLOC(ctx,size) (ctx)->malloc( (ctx), (size) )
#define __U64_TYPE __u_quad_t
#define __linux__ 1
#define EXIT_FAILURE 1
#define V_FREE(ctx,buf) (ctx)->free( (ctx), (buf) )
#define _SIZE_T_DEFINED_ 
#define __LONG_LONG_PAIR(HI,LO) LO, HI
#define __USING_NAMESPACE_STD(name) 
#define NULL ((void *)0)
#define __KERNEL_STRICT_NAMES 
#define __USING_NAMESPACE_C99(name) 
#define BIG_ENDIAN __BIG_ENDIAN
#define __BLKSIZE_T_TYPE __SLONGWORD_TYPE
#define __stub_lchmod 
#define _POSIX_SOURCE 1
#define __stub___kernel_sinl 
#define __attribute_used__ __attribute__ ((__used__))
#define __PMT(args) args
#define _SYS_TYPES_H 1
#define _VPLATFORM_H_X_ 
#define __USER_LABEL_PREFIX__ 
#define linux 1
#define V_INT8 char
#define __GLIBC__ 2
#define __END_DECLS 
#define __int8_t_defined 
#define __CONCAT(x,y) x ## y
#define __STDC_HOSTED__ 1
#define __SLONG32_TYPE long int
#define _SYS_SELECT_H 1
#define _PTHREAD_DESCR_DEFINED 
#define __KEY_T_TYPE __S32_TYPE
#define __WORDSIZE 32
#define __BEGIN_DECLS 
#define __GNU_LIBRARY__ 6
#define __USE_ANSI 1
#define __SSIZE_T_TYPE __SWORD_TYPE
#define _STRING_H 1
#define V_OFFSETOF(s,m) (size_t)&(((s *)0)->m)
#define __RLIM_T_TYPE __ULONGWORD_TYPE
#define V_TRUE (1)
#define __DEV_T_TYPE __UQUAD_TYPE
#define __ino_t_defined 
#define __WCHAR_TYPE__ long int
#define __CLOCKID_T_TYPE __S32_TYPE
#define __stub_fdetach 
#define _WCHAR_T_ 
#define V_INT16 short
#define __stub_chflags 
#define __UQUAD_TYPE unsigned long long int
#define __BYTE_ORDER __LITTLE_ENDIAN
#define __USE_POSIX 1
#define V_UINT32 unsigned int
#define __FSID_T_TYPE struct { int __val[2]; }
#define V_INT32 int
#define __malloc_and_calloc_defined 
#define __STDC_IEC_559__ 1
#define _WCHAR_T_DECLARED 
#define __STDC_ISO_10646__ 200009L
#define __gnu_linux__ 1
#define __S16_TYPE short int
#define _ENDIAN_H 1
#define _T_SIZE_ 
#define V_REALLOC(ctx,buf,size) (ctx)->realloc( (ctx), (buf), (size) )
#define __FD_SET(fd,fdsp) __asm__ __volatile__ ("btsl %1,%0" : "=m" (__FDS_BITS (fdsp)[__FDELT (fd)]) : "r" (((int) (fd)) % __NFDBITS) : "cc","memory")
#define __gid_t_defined 
#define __ptr_t void *
#define ___int_size_t_h 
#define __TIMER_T_TYPE __S32_TYPE
#define __THROW 
#define V_DEFAULT_STRUCT_ALIGNMENT (sizeof(void *))
#define __GLIBC_HAVE_LONG_LONG 1
#define __GLIBC_MINOR__ 3
#define ___int_wchar_t_h 
#define __WINT_TYPE__ unsigned int
#define __GNUC__ 3
#define __timespec_defined 1
#define __OFF64_T_TYPE __SQUAD_TYPE
#define __BIT_TYPES_DEFINED__ 1
#define V_UINT16 unsigned short
#define __USE_SVID 1
#define __USE_POSIX199309 1
#define _VCONTEXT_H_ 
#define __defined_schedparam 1
#define __FDELT(d) ((d) / __NFDBITS)
#define __BLKCNT64_T_TYPE __SQUAD_TYPE
#define __FSBLKCNT_T_TYPE __ULONGWORD_TYPE
#define __ASMNAME(cname) __ASMNAME2 (__USER_LABEL_PREFIX__, cname)
#define _SIZET_ 
#define _SVID_SOURCE 1
#define EXIT_SUCCESS 0
#define __stub_stty 
#define __wchar_t__ 
#define __intN_t(N,MODE) typedef int int ##N ##_t __attribute__ ((__mode__ (MODE)))
#define __END_NAMESPACE_STD 
#define __DADDR_T_TYPE __S32_TYPE
#define __END_NAMESPACE_C99 
#define __FD_SETSIZE 1024
#define __PID_T_TYPE __S32_TYPE
#define __attribute_format_strfmon__(a,b) __attribute__ ((__format__ (__strfmon__, a, b)))
#define _SIZE_T_DEFINED 
#define _WCHAR_T_DEFINED_ 
#define __USE_POSIX199506 1
#define _FEATURES_H 1
#define __CDBASE_DEFS_H_ 
#define __stub_fattach 
#define __stub___kernel_tanl 
#define __strtol_internal_defined 1
#define _SIZE_T 
#define __dev_t_defined 
#define __ULONG32_TYPE unsigned long int
#define __S32_TYPE int
#define alloca(size) __builtin_alloca (size)
#define __BIG_ENDIAN 4321
#define __suseconds_t_defined 
#define __off_t_defined 
#define __FSFILCNT_T_TYPE __ULONGWORD_TYPE
#define PDP_ENDIAN __PDP_ENDIAN
#define __mode_t_defined 
#define _GCC_SIZE_T 
#define __INO64_T_TYPE __UQUAD_TYPE
#define __bounded 
#define FD_SET(fd,fdsetp) __FD_SET (fd, fdsetp)
#define __USECONDS_T_TYPE __U32_TYPE
#define __size_t__ 
#define __BEGIN_NAMESPACE_STD 
#define __OFF_T_TYPE __SLONGWORD_TYPE
#define __BEGIN_NAMESPACE_C99 
#define _T_WCHAR 
#define _WCHAR_T 
#define FD_ISSET(fd,fdsetp) __FD_ISSET (fd, fdsetp)
#define __FD_ZERO(fdsp) do { int __d0, __d1; __asm__ __volatile__ ("cld; rep; stosl" : "=c" (__d0), "=D" (__d1) : "a" (0), "0" (sizeof (fd_set) / sizeof (__fd_mask)), "1" (&__FDS_BITS (fdsp)[0]) : "memory"); } while (0)
#define __fsfilcnt_t_defined 
#define __blkcnt_t_defined 
#define __u_intN_t(N,MODE) typedef unsigned int u_int ##N ##_t __attribute__ ((__mode__ (MODE)))
#define __U16_TYPE unsigned short int
#define V_BOOLEAN int
#define _GCC_WCHAR_T 
#define _SIGSET_NWORDS (1024 / (8 * sizeof (unsigned long int)))
#define __ptrvalue 
#define __GXX_ABI_VERSION 102
#define _DEBUG_ 1
#define __SWORD_TYPE int
#define i386 1
#define __FD_CLR(fd,fdsp) __asm__ __volatile__ ("btrl %1,%0" : "=m" (__FDS_BITS (fdsp)[__FDELT (fd)]) : "r" (((int) (fd)) % __NFDBITS) : "cc","memory")
#define __FLOAT_WORD_ORDER __BYTE_ORDER
#define _T_SIZE 
#define _STRUCT_TIMEVAL 1
#define __GNUC_MINOR__ 2
#define LITTLE_ENDIAN __LITTLE_ENDIAN
#define _BITS_PTHREADTYPES_H 1
#define V_INT64 long long
#define V_FALSE (0)
#define __key_t_defined 
#define FD_CLR(fd,fdsetp) __FD_CLR (fd, fdsetp)
#define VPTR_ADD(ptr,offset,type) ( type ) ( ( (V_UINT8 *) (ptr) ) + (offset) )
#define __STDC__ 1
#define __attribute_malloc__ __attribute__ ((__malloc__))
#define __PTRDIFF_TYPE__ int
#define __clockid_t_defined 1
#define __attribute_noinline__ __attribute__ ((__noinline__))
#define __tune_i386__ 1
#define __time_t_defined 1
#define V_PAGE_SIZE (4096)
#define __MODE_T_TYPE __U32_TYPE
#define _SYS_SYSMACROS_H 1
#define __CLOCK_T_TYPE __SLONGWORD_TYPE
#define __RLIM64_T_TYPE __UQUAD_TYPE
#define V_EXPORT 
#define __FSFILCNT64_T_TYPE __UQUAD_TYPE
#define __WCHAR_T__ 
#define __attribute_deprecated__ __attribute__ ((__deprecated__))
#define __FDS_BITS(set) ((set)->__fds_bits)
#define __REDIRECT(name,proto,alias) name proto __asm__ (__ASMNAME (#alias))
#define __FDMASK(d) ((__fd_mask) 1 << ((d) % __NFDBITS))
#define __REGISTER_PREFIX__ 
#define __attribute_pure__ __attribute__ ((__pure__))
#define V_MEMBEROF(ptr,offset) (((V_UINT8 *) ptr) - offset)
#define __USE_POSIX2 1
#define __ldiv_t_defined 1
#define __SLONGWORD_TYPE long int
#define __NO_INLINE__ 1
#define __FD_ISSET(fd,fdsp) (__extension__ ({register char __result; __asm__ __volatile__ ("btl %1,%2 ; setcb %b0" : "=q" (__result) : "r" (((int) (fd)) % __NFDBITS), "m" (__FDS_BITS (fdsp)[__FDELT (fd)]) : "cc"); __result; }))
#define V_INLINE inline
#define __P(args) args __THROW
#define __i386 1
#define __WCHAR_T 
#define __U32_TYPE unsigned int
#define __VERSION__ "3.2.3 20030502 (Red Hat Linux 3.2.3-59)"
#define __fsblkcnt_t_defined 
#define _STDLIB_H 1
#define FD_ZERO(fdsetp) __FD_ZERO (fdsetp)
